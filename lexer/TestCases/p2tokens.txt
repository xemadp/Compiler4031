program <PROGRAM_KW, ->
prg2 <IDENTIFER, 0>
function <FUNCTION_KW, ->
avg <IDENTIFER, 1>
( <RIGHT_PA, ->
integer <INTEGER_KW, ->
m <IDENTIFER, 2>
integer <INTEGER_KW, ->
n <IDENTIFER, 3>
; <SEMICOLON, ->
) <LEFT_PA, ->
: <COLON, ->
real <REAL_KW, ->
integer <INTEGER_KW, ->
sum <IDENTIFIER, 4>
, <COMMA, ->
num <IDENTIFIER, 5>
; <SEMICOLON, ->
real <REAL_KW>
average <IDENTIFIER, 6>
; <SEMICOLON, ->
begin <BEGIN_KW, ->
sum <IDENTIFIER, 4>
:= <ASSIGN_OP, ->
0 <INTEGER_NUMBER,7>
; <SEMICOLON, ->
average <IDENTIFIER, 6>
:= <ASSIGN_OP, ->
0 <INTEGER_NUMBER,7>
; <SEMICOLON, ->
for <FOR_KW, ->
num <IDENTIFIER, 5>
:= <ASSIGN_OP, ->
m <IDENTIFER, 2>
to <TO_KW, ->
m <IDENTIFER, 3>
do <DO_KW>
sum <IDENTIFIER, 4>
:= <ASSIGN_OP, ->
sum <IDENTIFIER, 4>
+ <ADD_KW, ->
num <IDENTIFIER, 5>
; <SEMICOLON, ->
average <IDENTIFIER, 6>
:= <ASSIGN_OP, ->
sum <IDENTIFIER, 4>
/ <DIV_OP, ->
( <RIGHT_PA, ->
n <IDENTIFER, 3>
- <SUB_OP, ->
m <IDENTIFER, 2>
+ <ADD_OP, ->
1 <INTEGER_NUMBER, 8>
) <LEFT_PA, ->
; <SEMICOLON, ->
return <RETURN_KW, ->
average <IDENTIFIER, 6>
; <SEMICOLON, ->
end <END_KW, ->
begin <BEGIN_KW, ->
a <IDENTIFIER, 9>
:= <ASSIGN_OP, ->
avg <IDENTIFIER, 1>
( <RIGHT_PA, ->
1 <INTEGER_NUMBER, 8>
, <COMMA, ->
20 <INTEGER_NUMBER, 9>
) <LEFT_PA, ->
; <SEMICOLON, ->
