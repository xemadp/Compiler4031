start ::= "program" id ";" decList funcList block

decList ::= decs decList* 

decs ::= type varList ";"
      | ""

type ::= "integer"
      | "real"
      | "boolean"

varList ::= id varList* 

funcList ::= funcDec
          | ""

funcDec ::= "function" id parameters ":" type decList block

parameters ::= "(" decList ")"

block ::= "begin" stmtList "end"

stmtList ::= stmt stmtList*

stmt ::= id ":=" expr ";"
      | "if" expr "then" stmt
      | "if" expr "then" stmt "else" stmt
      | "while" expr "do" stmt
      | "for" id ":=" expr "to" expr "do" stmt
      | "return" expr ";"
      | block

expr ::= expr "and" expr
      | expr "or" expr
      | expr "*" expr
      | expr "/" expr
      | expr "+" expr
      | expr "-" expr
      | expr relop expr
      | "(" expr ")"
      | integerNumber
      | realNumber
      | "true"
      | "false"
      | id "(" actualparamlist ")"
      | id

actualparamlist ::= expr actualparamlist* 
                | id
                | ""

relop ::= "<"
       | "<="
       | "="
       | "<>"
       | ">="
       | ">"

id ::= letter string

string ::= letter string
        | digit string
        | letter
        | digit

letter ::= "A" | "B" | "C" | "D" | "E" | "F" | "G"
        | "H" | "I" | "J" | "K" | "L" | "M" | "N"
        | "O" | "P" | "Q" | "R" | "S" | "T" | "U"
        | "V" | "W" | "X" | "Y" | "Z" | "a" | "b"
        | "c" | "d" | "e" | "f" | "g" | "h" | "i"
        | "j" | "k" | "l" | "m" | "n" | "o" | "p"
        | "q" | "r" | "s" | "t" | "u" | "v" | "w"
        | "x" | "y" | "z"

nonZeroDigit ::= "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
digit ::= "0" | nonZeroDigit

integerNum ::= sign noLeadingInt

sign ::= "+" | "-" | ""

noLeadingInt ::= nonZeroDigit digitSequence

digitSequence ::= digit digitSequence* 

realNumber ::= integerNum "." decimalPlace

decimalPlace ::= digitSequence
              | digitSequence "E" integerNum
